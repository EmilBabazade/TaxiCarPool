// <auto-generated />
using System;
using CarpoolAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarpoolAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230115112222_UserName")]
    partial class UserName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.13");

            modelBuilder.Entity("CarpoolAPI.Features.Driver.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("carModel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("seatCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("CarpoolAPI.Features.Ride.Ride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DriverId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("day")
                        .HasColumnType("INTEGER");

                    b.Property<string>("endLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("endTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("startLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("startTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("Rides");
                });

            modelBuilder.Entity("CarpoolAPI.Features.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DriverId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DriverId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RideUser", b =>
                {
                    b.Property<int>("RidesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RidesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RideUser");
                });

            modelBuilder.Entity("CarpoolAPI.Features.Ride.Ride", b =>
                {
                    b.HasOne("CarpoolAPI.Features.Driver.Driver", "Driver")
                        .WithMany("Rides")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("CarpoolAPI.Features.User.User", b =>
                {
                    b.HasOne("CarpoolAPI.Features.Driver.Driver", "Driver")
                        .WithOne("User")
                        .HasForeignKey("CarpoolAPI.Features.User.User", "DriverId");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("RideUser", b =>
                {
                    b.HasOne("CarpoolAPI.Features.Ride.Ride", null)
                        .WithMany()
                        .HasForeignKey("RidesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarpoolAPI.Features.User.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarpoolAPI.Features.Driver.Driver", b =>
                {
                    b.Navigation("Rides");

                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
